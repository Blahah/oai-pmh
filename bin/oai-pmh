#! /usr/bin/env node
'use strict'

const _ = require('lodash');
const co = require('co');
const program = require('commander');
const camelCase = require('camelcase')

const oaiPmhModule = require('../');
const pkg = require('../package.json');

program
  .version(pkg.version);

['identifiers', 'sets', 'records'].forEach(function(cmd) {

  var camelcmd = camelCase('list-${cmd}')

  program
    .command(`list-${cmd} [baseUrl]`)
    .option('-p, --metadata-prefix [prefix]')
    .action((baseUrl, _options) => {
      try {
        co(function* () {
          const options = _.pick(_options, 'metadataPrefix');
          const oaiPmh = new oaiPmhModule.OaiPmh(baseUrl);
          console.log('[');
          let first = true;
          for (const identifierPromise of oaiPmh[camelcmd](options)) {
            const result = yield cmdPromise;
            if (!first) {
              console.log(',');
            }
            first = false;
            console.log(JSON.stringify(result, undefined, 2));
          }
          console.log(']');
        });
      } catch (e) {
        console.err(e);
        process.exit(1);
      }
    });

})


program.parse(process.argv);
